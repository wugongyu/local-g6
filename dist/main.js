!function(g){var I={};function C(A){var n;return(I[A]||(n=I[A]={i:A,l:!1,exports:{}},g[A].call(n.exports,n,n.exports,C),n.l=!0,n)).exports}C.m=g,C.c=I,C.d=function(g,I,A){C.o(g,I)||Object.defineProperty(g,I,{enumerable:!0,get:A})},C.r=function(g){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(g,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(g,"__esModule",{value:!0})},C.t=function(g,I){if(1&I&&(g=C(g)),8&I)return g;if(4&I&&"object"==typeof g&&g&&g.__esModule)return g;var A=Object.create(null);if(C.r(A),Object.defineProperty(A,"default",{enumerable:!0,value:g}),2&I&&"string"!=typeof g)for(var n in g)C.d(A,n,function(I){return g[I]}.bind(null,n));return A},C.n=function(g){var I=g&&g.__esModule?function(){return g.default}:function(){return g};return C.d(I,"a",I),I},C.o=function(g,I){return Object.prototype.hasOwnProperty.call(g,I)},C.p="",C(C.s=0)}([function(module,__webpack_exports__,__webpack_require__){"use strict";eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// CONCATENATED MODULE: ./jsForAntv3-0/behaviorConfig/hover-edge.js\nconst hoverEdgeConfig = eventBus => ({\n  getEvents() {\n    return {\n      'edge:mouseover': 'onMouseover',\n      'edge:mouseleave': 'onMouseleave',\n      \"edge:click\": \"onClick\"\n    };\n  },\n  onMouseover(e) {\n    const self = this;\n    const item = e.item;\n    const graph = self.graph;\n    if (item.hasState('selected')) {\n      return;\n    } else {\n      if (self.shouldUpdate.call(self, e)) {\n        graph.setItemState(item, 'hover', true);\n      }\n    }\n    graph.paint();\n  },\n  onMouseleave(e) {\n    const self = this;\n    const item = e.item;\n    const graph = self.graph;\n    const group = item.getContainer();\n    group.find(g => {\n      if (g._attrs.isInPoint || g._attrs.isOutPoint) {\n        g.attr(\"fill\", \"#fff\");\n      }\n    });\n    if (self.shouldUpdate.call(self, e)) {\n      if (!item.hasState('selected')) graph.setItemState(item, 'hover', false);\n    }\n    graph.paint();\n  },\n  onClick(e) {\n    const self = this;\n    const item = e.item;\n    const graph = self.graph;\n    const autoPaint = graph.get('autoPaint');\n    graph.setAutoPaint(false);\n    const selectedNodes = graph.findAllByState('node', 'selected');\n    G6.Util.each(selectedNodes, node => {\n      graph.setItemState(node, 'selected', false);\n    });\n    if (!self.keydown || !self.multiple) {\n      const selected = graph.findAllByState('edge', 'selected');\n      G6.Util.each(selected, edge => {\n        if (edge !== item) {\n          graph.setItemState(edge, 'selected', false);\n        }\n      });\n    }\n    if (item.hasState('selected')) {\n      if (self.shouldUpdate.call(self, e)) {\n        graph.setItemState(item, 'selected', false);\n      }\n      eventBus.$emit('nodeselectchange', {\n        target: item,\n        select: false\n      });\n    } else {\n      if (self.shouldUpdate.call(self, e)) {\n        graph.setItemState(item, 'selected', true);\n      }\n      eventBus.$emit('nodeselectchange', {\n        target: item,\n        select: true\n      });\n    }\n    graph.setAutoPaint(autoPaint);\n    graph.paint();\n  }\n});\n/* harmony default export */ var hover_edge = (hoverEdgeConfig);\n// CONCATENATED MODULE: ./jsForAntv3-0/behaviorConfig/hover-node.js\n// 鼠标移入、移出、点击行为\nconst hoverNodeConfig = eventBus => ({\n  getEvents: function getEvents() {\n    return {\n      'node:mouseover': 'onMouseover',\n      'node:mouseleave': 'onMouseleave',\n      \"node:mousedown\": \"onMousedown\"\n    };\n  },\n  onMouseover: function onMouseover(e) {\n    const self = this;\n    const item = e.item;\n    const graph = self.graph;\n    const group = item.getContainer();\n    // 判断是否为可向外关联的锚点，是则鼠标移入时修改样式，且鼠标点击时增加连线行为\n    if (e.target._attrs.isOutPointOut || e.target._attrs.isOutPoint) {\n      group.find(g => {\n        if (g._attrs.isInPoint || g._attrs.isOutPoint) {\n          g.attr(\"fill\", \"#fff\");\n        }\n        if (g._attrs.isOutPoint) {\n          if (g._attrs.id === e.target._attrs.parent) {\n            group.find(gr => {\n              if (gr._attrs.id === g._attrs.id) {\n                gr.attr('fill', \"#1890ff\");\n                gr.attr('opacity', 1);\n              }\n            });\n          }\n          if (g._attrs.id === e.target._attrs.id) {\n            g.attr(\"fill\", \"#1890ff\");\n            g.attr('opacity', 1);\n          }\n        }\n      });\n      e.target.attr(\"cursor\", \"crosshair\");\n      this.graph.paint();\n    }\n    if (item.hasState('selected')) {\n      return;\n    } else {\n      if (self.shouldUpdate.call(self, e)) {\n        graph.setItemState(item, 'hover', true);\n      }\n    }\n    graph.paint();\n  },\n  onMouseleave: function onMouseleave(e) {\n    const self = this;\n    const item = e.item;\n    const graph = self.graph;\n    const group = item.getContainer();\n    group.find(g => {\n      if (g._attrs.isInPoint || g._attrs.isOutPoint) {\n        g.attr(\"fill\", \"#fff\");\n      }\n    });\n    if (self.shouldUpdate.call(self, e)) {\n      if (!item.hasState('selected')) graph.setItemState(item, 'hover', false);\n    }\n    graph.paint();\n  },\n  onMousedown: function onMousedown(e) {\n    if (e.target._attrs.isOutPoint || e.target._attrs.isOutPointOut) {\n      this.graph.setMode('addEdge');\n    } else {\n      this.graph.setMode('moveNode');\n    }\n  }\n});\n/* harmony default export */ var hover_node = (hoverNodeConfig);\n// CONCATENATED MODULE: ./jsForAntv3-0/behaviorConfig/utils.js\nfunction getUuid() {\n  var s = [];\n  var hexDigits = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n  for (var i = 0; i < 36; i++) {\n    s[i] = hexDigits.substr(Math.floor(Math.random() * 0x10), 1);\n  }\n  s[14] = \"4\";\n  s[19] = hexDigits.substr(s[19] & 0x3 | 0x8, 1);\n  s[8] = s[13] = s[18] = s[23] = \"-\";\n  let uuid = s.join(\"\");\n  return uuid;\n}\n\n// CONCATENATED MODULE: ./jsForAntv3-0/behaviorConfig/add-edge.js\n\n\n// 边的操作行为\nlet startPoint = null;\nlet startItem = null;\nlet endPoint = {};\nlet activeItem = null;\nlet curInPoint = null;\nconst addEdgeConfig = eventBus => ({\n  getEvents() {\n    return {\n      mousemove: 'onMousemove',\n      mouseup: 'onMouseup',\n      'node:mouseover': 'onMouseover',\n      'node:mouseleave': 'onMouseleave'\n    };\n  },\n  onMouseup(e) {\n    const item = e.item;\n    if (item && item.getType() === 'node') {\n      const group = item.getContainer();\n      if (e.target._attrs.isInPoint) {\n        const children = group._cfg.children;\n        children.map(child => {\n          if (child._attrs.isInPointOut && child._attrs.parent === e.target._attrs.id) {\n            activeItem = child;\n          }\n        });\n        curInPoint = e.target;\n      } else if (e.target._attrs.isInPointOut) {\n        activeItem = e.target;\n        const children = group._cfg.children;\n        children.map(child => {\n          if (child._attrs.isInPoint && child._attrs.id === e.target._attrs.parent) {\n            curInPoint = child;\n          }\n        });\n      }\n      if (activeItem) {\n        const endX = parseInt(curInPoint._attrs.x);\n        const endY = parseInt(curInPoint._attrs.y);\n        endPoint = {\n          x: endX,\n          y: endY\n        };\n        if (this.edge) {\n          this.graph.removeItem(this.edge);\n          const model = {\n            id: 'edge' + getUuid(),\n            source: startItem,\n            target: item,\n            sourceId: startItem._cfg.id,\n            targetId: item._cfg.id,\n            start: startPoint,\n            end: endPoint,\n            shape: 'customEdge',\n            type: 'edge'\n          };\n          eventBus.$emit('addItem', model);\n        }\n      } else {\n        if (this.edge) this.graph.removeItem(this.edge);\n      }\n    } else {\n      if (this.edge) this.graph.removeItem(this.edge);\n    }\n    this.graph.find(\"node\", node => {\n      const group = node.get('group');\n      const children = group._cfg.children;\n      children.map(child => {\n        if (child._attrs.isInPointOut) {\n          child.attr(\"opacity\", \"0\");\n        }\n        if (child._attrs.isInPoint) {\n          child.attr(\"opacity\", \"0\");\n        }\n        if (child._attrs.isOutPoint) {\n          child.attr(\"opacity\", \"0\");\n          child.attr(\"fill\", \"#fff\");\n        }\n      });\n    });\n    if (startItem) {\n      this.graph.setItemState(startItem, 'hover', false);\n    }\n    this.graph.paint();\n    startPoint = null;\n    startItem = null;\n    endPoint = {};\n    activeItem = null;\n    curInPoint = null;\n    this.graph.setMode('default');\n  },\n  onMousemove(e) {\n    const item = e.item;\n    if (!startPoint) {\n      this.graph.find(\"node\", node => {\n        const group = node.get('group');\n        const children = group._cfg.children;\n        children.map(child => {\n          if (child._attrs.isInPointOut) {\n            child.attr(\"opacity\", \"0.3\");\n          }\n          if (child._attrs.isInPoint) {\n            child.attr(\"opacity\", \"1\");\n          }\n        });\n      });\n      const startX = parseInt(e.target._attrs.x);\n      const startY = parseInt(e.target._attrs.y);\n      startPoint = {\n        x: startX,\n        y: startY\n      };\n      startItem = item;\n      this.edge = this.graph.addItem('edge', {\n        source: item,\n        target: item,\n        start: startPoint,\n        end: startPoint,\n        shape: 'link-edge'\n      });\n    } else {\n      const point = {\n        x: e.x,\n        y: e.y\n      };\n      if (this.edge) {\n        // 增加边的过程中，移动时边跟着移动\n        this.graph.updateItem(this.edge, {\n          //  start: startPoint,\n          target: point\n        });\n      }\n    }\n  },\n  onMouseover(e) {\n    const item = e.item;\n    if (item && item.getType() === 'node') {\n      if (e.target._attrs.isInPointOut && !this.hasTran) {\n        this.hasTran = true;\n        e.target.transform([['t', 0, 3], ['s', 1.2, 1.2]]);\n      }\n      this.graph.paint();\n    }\n  },\n  onMouseleave() {\n    this.graph.find(\"node\", node => {\n      const group = node.get('group');\n      const children = group._cfg.children;\n      children.map(child => {\n        if (child._attrs.isInPointOut) {\n          child.resetMatrix();\n        }\n      });\n    });\n    this.hasTran = false;\n    this.graph.paint();\n  }\n});\n/* harmony default export */ var add_edge = (addEdgeConfig);\n// CONCATENATED MODULE: ./jsForAntv3-0/behaviorConfig/select-node.js\nconst selectNodeConfig = eventBus => ({\n  getDefaultCfg() {\n    return {\n      multiple: true,\n      keyCode: 16\n    };\n  },\n  getEvents() {\n    return {\n      'node:click': 'onClick',\n      'canvas:click': 'onCanvasClick',\n      'canvas:mouseover': 'onCanvasMouseover',\n      keyup: 'onKeyUp',\n      keydown: 'onKeyDown'\n    };\n  },\n  onClick(e) {\n    const self = this;\n    const item = e.item;\n    const graph = self.graph;\n    const autoPaint = graph.get('autoPaint');\n    graph.setAutoPaint(false);\n    const selectedEdges = graph.findAllByState('edge', 'selected');\n    G6.Util.each(selectedEdges, edge => {\n      graph.setItemState(edge, 'selected', false);\n    });\n    if (!self.keydown || !self.multiple) {\n      const selected = graph.findAllByState('node', 'selected');\n      G6.Util.each(selected, node => {\n        if (node !== item) {\n          graph.setItemState(node, 'selected', false);\n        }\n      });\n    }\n    if (item.hasState('selected')) {\n      if (self.shouldUpdate.call(self, e)) {\n        graph.setItemState(item, 'selected', false);\n      }\n      eventBus.$emit('nodeselectchange', {\n        target: item,\n        select: false\n      });\n    } else {\n      if (self.shouldUpdate.call(self, e)) {\n        graph.setItemState(item, 'selected', true);\n      }\n      eventBus.$emit('nodeselectchange', {\n        target: item,\n        select: true\n      });\n    }\n    graph.setAutoPaint(autoPaint);\n    graph.paint();\n  },\n  onCanvasClick() {\n    const graph = this.graph;\n    const autoPaint = graph.get('autoPaint');\n    graph.setAutoPaint(false);\n    const selected = graph.findAllByState('node', 'selected');\n    G6.Util.each(selected, node => {\n      graph.setItemState(node, 'selected', false);\n      eventBus.$emit('nodeselectchange', {\n        target: node,\n        select: false\n      });\n    });\n    const selectedEdges = graph.findAllByState('edge', 'selected');\n    G6.Util.each(selectedEdges, edge => {\n      graph.setItemState(edge, 'selected', false);\n      eventBus.$emit('nodeselectchange', {\n        target: edge,\n        select: false\n      });\n    });\n    graph.paint();\n    graph.setAutoPaint(autoPaint);\n  },\n  onCanvasMouseover() {\n    const graph = this.graph;\n    graph.paint();\n  },\n  onKeyDown(e) {\n    const code = e.keyCode || e.which;\n    if (code === this.keyCode) {\n      this.keydown = true;\n    } else {\n      this.keydown = false;\n    }\n  },\n  onKeyUp() {\n    this.keydown = false;\n  }\n});\n/* harmony default export */ var select_node = (selectNodeConfig);\n// CONCATENATED MODULE: ./jsForAntv3-0/behaviorConfig/keyboard.js\nconst keyboardConfig = eventBus => ({\n  getDefaultCfg() {\n    return {\n      backKeyCode: 8,\n      deleteKeyCode: 46\n    };\n  },\n  getEvents() {\n    return {\n      keyup: 'onKeyUp',\n      keydown: 'onKeyDown'\n    };\n  },\n  onKeyDown(e) {\n    console.log('in keyboard keydown');\n    const code = e.keyCode || e.which;\n    switch (code) {\n      case this.deleteKeyCode:\n      case this.backKeyCode:\n        eventBus.$emit('deleteItem');\n        break;\n      default:\n        break;\n    }\n  },\n  onKeyUp() {\n    this.keydown = false;\n  }\n});\n/* harmony default export */ var keyboard = (keyboardConfig);\n// CONCATENATED MODULE: ./jsForAntv3-0/behaviorConfig/behavior.js\n\n\n\n\n\nwindow.behaviors = {\n  'hover-node': hover_node,\n  'add-edge': add_edge,\n  'hover-edge': hover_edge,\n  'select-node': select_node,\n  'keyboard': keyboard\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///0\n")}]);